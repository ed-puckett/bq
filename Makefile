######################################################################
# CHANGING VERSION NUMBER
#
# The version number for this product is the version number stored in package.json.
# The VERSION string below is varified that its "major" and "minor" parts match
# package.json.
#
# To move to a next major or minor version:
# 1. do a final build
# 2. push changes to the git servers
# 3. tag the version
# 4. change the "version" entry in package.json (MAJOR.MINOR.REVISION -- REVISION may be 0)
# 5. change the VERSION string below (match MAJOR and MINOR from package.json)
# 6. do: make full-clean all
# 7. check the dist directory to make sure the new vX.Y directory has been created
# 8. push changes to the git servers

VERSION = 0.2

SERVER_ADDRESS    = 127.0.0.127
SERVER_PORT       = 4320

DIST_VERSIONS_DIR = ./dist

VERSION_DIR = v$(VERSION)
DIST_DIR    = $(DIST_VERSIONS_DIR)/$(VERSION_DIR)

SHELL = /bin/bash
MAKEFLAGS += --no-print-directory


######################################################################

.PHONY: all
all: $(DIST_DIR)
	@make check-version >/dev/null

.DEFAULT: all

.PHONY: clean
clean: #kill-server #<<< NOTE: just leave server running...
	@-rm -fr "$(DIST_DIR)" "webpack.config.js" >/dev/null 2>&1 || true

.PHONY: full-clean
full-clean: clean
	@-rm -fr ./node_modules >/dev/null 2>&1 || true

.PHONY: check-version
check-version:
	@./build-tools/check-version.js $(VERSION)

.PHONY: install
install: ./node_modules $(DIST_DIR)
	@make check-version >/dev/null

.PHONY: lint
lint: ./node_modules
#!!!	./node_modules/.bin/eslint --config .eslintrc.cjs src lib

$(DIST_DIR): Makefile package.json webpack.config.js ./src ./src/* ./src/*/* ./src/*/*/* ./src/*/*/*/* ./src/*/*/*/*/* ./lib ./lib/* ./lib/*/* ./lib/*/*/* ./node_modules README.md
	@make check-version >/dev/null
	@./build-tools/build-dist.sh `./build-tools/check-version.js $(VERSION)` $(VERSION_DIR)

./package-lock.json ./node_modules: ./package.json
	npm install
	touch ./package-lock.json ./node_modules

webpack.config.js: webpack.config.js.template Makefile
	@make check-version >/dev/null
	@>webpack.config.js
	@echo '// *** THIS FILE IS AUTOMATICALLY GENERATED -- DO NOT EDIT ***'    >>webpack.config.js
	@echo "const version_dir = '$(VERSION_DIR)';  // (generated by Makefile)" >>webpack.config.js
	@cat webpack.config.js.template                                           >>webpack.config.js

copy-files:
	./build-tools/build-dist.sh `./build-tools/check-version.js $(VERSION)` $(VERSION_DIR) copy-only

.PHONY: test
test:
	npm test

# kill the server by performing a GET on /QUIT
# uses Linux commands: lsof, grep, cut
# server uses python (version 3)
# start the server in the directory $(DIST_VERSIONS_DIR)
.PHONY: server
server: $(DIST_DIR)
	( cd "$(DIST_VERSIONS_DIR)" && python ../build-tools/server.py $(SERVER_ADDRESS) $(SERVER_PORT) 2>&1 | tee >(grep -q -m1 '"GET /QUIT'; echo QUITTING; sleep 0.1; kill $$(lsof -itcp:$(SERVER_PORT) -sTCP:LISTEN -Fp | grep ^p | cut -c2-)) )

# uses curl
.PHONY: kill-server
kill-server:
	@if lsof -itcp:$(SERVER_PORT) -sTCP:LISTEN >/dev/null 2>&1; then echo 'sending QUIT to server'; curl -s http://$(SERVER_ADDRESS):$(SERVER_PORT)/QUIT >/dev/null 2>&1; true; fi

.PHONY: dev-server
dev-server:
	npx nodemon --watch src --watch lib --watch help --watch package.json --watch Makefile --watch .eslintrc.cjs --watch webpack.config.js --watch build-tools --watch node_modules  --ext ts,js,cjs,mjs,html,css,ico,svg,py,sh  --exec "bash -c 'make server' || exit 1"

.PHONY: client
client:
	chromium --new-window http://$(SERVER_ADDRESS):$(SERVER_PORT)/current/index.html &

.PHONY: start
start: $(DIST_DIR)
	if ! lsof -itcp:$(SERVER_PORT) -sTCP:LISTEN; then make server <&- >/dev/null 2>&1 & sleep 1; fi; make client
